{"version":3,"sources":["hooks/useLocalStorage.js","contexts/ContactsProvider.js","contexts/SocketProvider.js","contexts/ConversationsProvider.js","components/Conversations.js","components/Contacts.js","components/NewContactModal.js","components/NewConversationModal.js","components/Sidebar.js","components/OpenConversation.js","components/Dashboard.js","components/LoginMERN.js","components/Signup.js","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","ContactsContext","React","createContext","useContacts","useContext","ContactsProvider","children","contacts","setContacts","Provider","createContact","id","name","prevContacts","SocketContext","SocketProvider","socket","setSocket","newSocket","io","process","REACT_APP_USERAPI","query","close","ConversationsContext","useConversations","ConversationsProvider","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","addMessageToConversation","useCallback","recipients","text","sender","prevConversations","madeChange","newMessage","newConversations","map","conversation","a","b","length","sort","every","element","index","messages","on","off","formattedConversations","recipient","contact","find","message","fromMe","senderName","selected","selectedConversation","sendMessage","emit","selectConversationIndex","createConversation","Conversations","ListGroup","variant","Item","action","onClick","active","r","join","Contacts","NewContactModal","closeModal","idRef","useRef","nameRef","Modal","Header","closeButton","Body","Form","onSubmit","e","preventDefault","current","Group","Label","Control","type","ref","required","Button","NewConversationModal","selectedContactIds","setSelectedContactIds","controlId","Check","includes","label","onChange","contactId","prevSelectedContactIds","filter","prevId","Sidebar","activeKey","setActiveKey","modalOpen","setModalOpen","conversationsOpen","style","width","className","Tab","Container","onSelect","Nav","Link","eventKey","Content","Pane","show","onHide","OpenConversation","setText","setRef","node","scrollIntoView","smooth","handleSubmit","lastMessage","InputGroup","as","target","onKeyPress","height","resize","Append","Dashboard","history","useHistory","logout","axios","get","push","display","alignItems","justifyContent","overflow","maxHeight","margin","maxWidth","backgroundColor","borderRadius","Login","onLoginSuccess","username","fullName","_id","succes","error","logindata","setLogindata","console","log","success","data","password","requestOptions","method","url","response","status","getLogin","placeholder","defaultValue","Signup","email","post","App","setId","loading","setLoading","setUser","logInDone","setLogInDone","fetch","json","getUser","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef8e5d4a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst PREFIX = 'whatsapp-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n  return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, { id, name }]\n    })\n  }\n\n  return (\n    <ContactsContext.Provider value={{ contacts, createContact }}>\n      {children}\n    </ContactsContext.Provider>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst SocketContext = React.createContext();\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\n\nexport function SocketProvider({ id, children }) {\n  const [socket, setSocket] = useState();\n\n  useEffect(() => {\n    const newSocket = io(`${process.env.REACT_APP_USERAPI}`, { query: { id } });\n    setSocket(newSocket);\n\n    return () => newSocket.close();\n  }, [id]);\n\n  return (\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\n  );\n}\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useContacts } from './ContactsProvider';\nimport { useSocket } from './SocketProvider';\n\nconst ConversationsContext = React.createContext()\n\nexport function useConversations() {\n  return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ id, children }) {\n  const [conversations, setConversations] = useLocalStorage('conversations', [])\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0)\n  const { contacts } = useContacts()\n  const socket = useSocket()\n\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, { recipients, messages: [] }]\n    })\n  }\n\n  const addMessageToConversation = useCallback(({ recipients, text, sender }) => {\n    setConversations(prevConversations => {\n      let madeChange = false\n      const newMessage = { sender, text }\n      const newConversations = prevConversations.map(conversation => {\n        if (arrayEquality(conversation.recipients, recipients)) {\n          madeChange = true\n          return {\n            ...conversation,\n            messages: [...conversation.messages, newMessage]\n          }\n        }\n\n        return conversation\n      })\n\n      if (madeChange) {\n        return newConversations\n      } else {\n        return [\n          ...prevConversations,\n          { recipients, messages: [newMessage] }\n        ]\n      }\n    })\n  }, [setConversations])\n\n  useEffect(() => {\n    if (socket == null) return\n\n    socket.on('receive-message', addMessageToConversation)\n\n    return () => socket.off('receive-message')\n  }, [socket, addMessageToConversation])\n\n  function sendMessage(recipients, text) {\n    socket.emit('send-message', { recipients, text })\n\n    addMessageToConversation({ recipients, text, sender: id })\n  }\n\n  const formattedConversations = conversations.map((conversation, index) => {\n    const recipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient\n      })\n      const name = (contact && contact.name) || recipient\n      return { id: recipient, name }\n    })\n\n    const messages = conversation.messages.map(message => {\n      const contact = contacts.find(contact => {\n        return contact.id === message.sender\n      })\n      const name = (contact && contact.name) || message.sender\n      const fromMe = id === message.sender\n      return { ...message, senderName: name, fromMe }\n    })\n    \n    const selected = index === selectedConversationIndex\n    return { ...conversation, messages, recipients, selected }\n  })\n\n  const value = {\n    conversations: formattedConversations,\n    selectedConversation: formattedConversations[selectedConversationIndex],\n    sendMessage,\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation\n  }\n\n  return (\n    <ConversationsContext.Provider value={value}>\n      {children}\n    </ConversationsContext.Provider>\n  )\n}\n\nfunction arrayEquality(a, b) {\n  if (a.length !== b.length) return false\n\n  a.sort()\n  b.sort()\n\n  return a.every((element, index) => {\n    return element === b[index]\n  })\n}","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider';\n\nexport default function Conversations() {\n  const { conversations, selectConversationIndex } = useConversations()\n\n  return (\n    <ListGroup variant=\"flush\">\n      {conversations.map((conversation, index) => (\n        <ListGroup.Item\n          key={index}\n          action\n          onClick={() => selectConversationIndex(index)}\n          active={conversation.selected}>\n          {conversation.recipients.map(r => r.name).join(', ')}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider';\n\nexport default function Contacts() {\n  const { contacts } = useContacts()\n\n  return (\n    <ListGroup variant=\"flush\">\n      {contacts.map(contact => (\n        <ListGroup.Item key={contact.id}>\n          {contact.name}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}\n","import React, { useRef } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\n\nexport default function NewContactModal({ closeModal }) {\n  const idRef = useRef()\n  const nameRef = useRef()\n  const { createContact } = useContacts()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    createContact(idRef.current.value, nameRef.current.value)\n    closeModal()\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Create Contact</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Id</Form.Label>\n            <Form.Control type=\"text\" ref={idRef} required />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" ref={nameRef} required />\n          </Form.Group>\n          <Button type=\"submit\">Create</Button>\n        </Form>\n      </Modal.Body>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\nimport { useConversations } from '../contexts/ConversationsProvider'\n\nexport default function NewConversationModal({ closeModal }) {\n  const [selectedContactIds, setSelectedContactIds] = useState([])\n  const { contacts } = useContacts()\n  const { createConversation } = useConversations()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    createConversation(selectedContactIds)\n    closeModal()\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId\n        })\n      } else {\n        return [...prevSelectedContactIds, contactId]\n      }\n    })\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Create Conversation</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          {contacts.map(contact => (\n            <Form.Group controlId={contact.id} key={contact.id}>\n              <Form.Check\n                type=\"checkbox\"\n                value={selectedContactIds.includes(contact.id)}\n                label={contact.name}\n                onChange={() => handleCheckboxChange(contact.id)}\n              />\n            </Form.Group>\n          ))}\n          <Button type=\"submit\">Create</Button>\n        </Form>\n      </Modal.Body>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Tab, Nav, Button, Modal } from 'react-bootstrap'\nimport Conversations from './Conversations'\nimport Contacts from './Contacts'\nimport NewContactModal from './NewContactModal'\nimport NewConversationModal from './NewConversationModal'\n\nconst CONVERSATIONS_KEY = 'conversations'\nconst CONTACTS_KEY = 'contacts'\n\nexport default function Sidebar({ id }) {\n  const [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY)\n  const [modalOpen, setModalOpen] = useState(false)\n  const conversationsOpen = activeKey === CONVERSATIONS_KEY\n\n  function closeModal() {\n    setModalOpen(false)\n  }\n\n  return (\n    <div style={{ width: '250px' }} className=\"d-flex flex-column\">\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\n        <Nav variant=\"tabs\" className=\"justify-content-center\">\n          <Nav.Item>\n            <Nav.Link eventKey={CONVERSATIONS_KEY}>Conversations</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey={CONTACTS_KEY}>Contacts</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content className=\"border-right overflow-auto flex-grow-1\">\n          <Tab.Pane eventKey={CONVERSATIONS_KEY}>\n            <Conversations />\n          </Tab.Pane>\n          <Tab.Pane eventKey={CONTACTS_KEY}>\n            <Contacts />\n          </Tab.Pane>\n        </Tab.Content>\n        <div className=\"p-2 border-top border-right small\">\n          Your Id: <span className=\"text-muted\">{id}</span>\n        </div>\n        <Button onClick={() => setModalOpen(true)} className=\"rounded-0\">\n          New {conversationsOpen ? 'Conversation' : 'Contact'}\n        </Button>\n      </Tab.Container>\n\n      <Modal show={modalOpen} onHide={closeModal}>\n        {conversationsOpen ?\n          <NewConversationModal closeModal={closeModal} /> :\n          <NewContactModal closeModal={closeModal} />\n        }\n      </Modal>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from \"react\";\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\n\nexport default function OpenConversation() {\n  const [text, setText] = useState(\"\");\n  const setRef = useCallback((node) => {\n    if (node) {\n      node.scrollIntoView({ smooth: true });\n    }\n  }, []);\n  const { sendMessage, selectedConversation } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    sendMessage(\n      selectedConversation.recipients.map((r) => r.id),\n      text\n    );\n    setText(\"\");\n  }\n\n  return (\n\n    <div className=\"d-flex flex-column flex-grow-1\">\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n          {selectedConversation.messages.map((message, index) => {\n            const lastMessage = selectedConversation.messages.length - 1 === index\n            return (\n              <div\n                ref={lastMessage ? setRef : null}\n                key={index}\n                className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}\n              >\n                <div\n                  className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}>\n                  {message.text}\n                </div>\n                <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`}>\n                  {message.fromMe ? 'You' : message.senderName}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"m-2\">\n          <InputGroup>\n            <Form.Control\n              as=\"textarea\"\n              required\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              onKeyPress={(e) => e.key === \"Enter\" && handleSubmit(e)}\n              style={{ height: \"75px\", resize: \"none\" }} />\n            <InputGroup.Append>\n              <Button type=\"submit\">Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\n\n\n\n\n","import React from 'react'\nimport Sidebar from './Sidebar';\nimport OpenConversation from './OpenConversation';\nimport { useConversations } from '../contexts/ConversationsProvider';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom'\n\nexport default function Dashboard({ id }) {\n  const history = useHistory()\n  const { selectedConversation } = useConversations()\n\n  const logout = async () => {\n    await axios.get('/logout')\n    history.push('/')\n  }\n  if (!id) {\n    history.push('/')\n  }\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', overflow: 'hidden' }}>\n      <Button onClick={logout}>Logout</Button>\n      <div className=\"d-flex\" style={{ height: '80vh', maxHeight: '800px', margin: '100px', width: '1000px', maxWidth: '1200px', backgroundColor: 'white', borderRadius: '5px' }}>\n        <Sidebar id={id} />\n        {selectedConversation && <OpenConversation />}\n      </div>\n    </div>\n  )\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function Login({ onLoginSuccess }) {\n  const history = useHistory()\n  const [logindata, setLogindata] = useState({\n    username: '',\n    fullName: '',\n    _id: 0,\n    succes: false,\n    error: false,\n  });\n\n  useEffect(() => {\n    console.log('useEffect', logindata);\n    if (logindata.success) onLoginSuccess(true);\n  }, [logindata]);\n\n  const handleSubmit = (e) => {\n    console.log('handleSubmit');\n    e.preventDefault();\n    const data = {\n      username: e.target[0].value,\n      password: e.target[1].value,\n    };\n\n    const getLogin = async (data) => {\n      console.log('getLogin', data, JSON.stringify(data));\n      const requestOptions = {\n        method: 'POST',\n        url: '/loginapi',\n        data: data,\n      };\n\n      const response = await axios(requestOptions);\n      console.log('response', response.status, response.data);\n      if (response && response.data && response.data.success)\n        setLogindata(response.data);\n      history.push('/dashboard')\n    };\n    getLogin(data);\n  };\n  return (\n    <Container\n      className=\"align-items-center d-flex\"\n      style={{ height: '100vh' }}\n    >\n      <Form onSubmit={handleSubmit} className=\"w-100\">\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            placeholder=\"username\"\n            name=\"username\"\n            defaultValue=\"\"\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            defaultValue=\"\"\n            required\n          />\n        </Form.Group>\n        <Button type=\"submit\" className=\"mr-2\">\n          Login\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { Container, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\n\nfunction Signup() {\n  const history = useHistory();\n  const handleSubmit = async (e) => {\n    console.log('handleSubmit');\n    e.preventDefault();\n    const data = {\n      username: e.target[0].value,\n      password: e.target[1].value,\n      fullName: e.target[2].value,\n      email: e.target[3].value,\n    };\n\n\n    const response = await axios.post('/signup', data);\n    console.log(response)\n    history.push('/login')\n  }\n  return (\n    <Container\n      className=\"align-items-center d-flex\"\n      style={{ height: '100vh' }}>\n      <Form onSubmit={handleSubmit} className=\"w-100\">\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            placeholder=\"username\"\n            name=\"username\"\n            defaultValue=\"\"\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            defaultValue=\"\"\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Full Name\"\n            name=\"fullName\"\n            defaultValue=\"\"\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            name=\"email\"\n            defaultValue=\"\"\n            required\n          />\n        </Form.Group>\n        <Button type=\"submit\" className=\"mr-2\">\n          Signup\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Signup;","import React, { useState, useEffect } from 'react';\n// import Login from './Login';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport Dashboard from './Dashboard';\nimport Login from './LoginMERN';\nimport { ContactsProvider } from '../contexts/ContactsProvider';\nimport { ConversationsProvider } from '../contexts/ConversationsProvider';\nimport { SocketProvider } from '../contexts/SocketProvider';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Signup from './Signup';\n\nfunction App() {\n  const [id, setId] = useState('id');\n\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  const [logInDone, setLogInDone] = useState(false);\n\n  useEffect(() => {\n    console.log('Container useEffect');\n    const getUser = async () => {\n      try {\n        const response = await fetch('/auth/user');\n        const json = await response.json();\n        setUser(json);\n        setId(json._id);\n        setLoading(false);\n      } catch (e) {\n        console.log(e)\n      }\n    };\n    getUser();\n  }, [logInDone]);\n\n  if (loading) return <div>Loading ...</div>;\n\n  // if (user && user.username)\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/dashboard'>\n          <SocketProvider id={id}>\n            <ContactsProvider>\n              <ConversationsProvider id={id}>\n                <Dashboard id={id} />\n              </ConversationsProvider>\n            </ContactsProvider>\n          </SocketProvider>\n        </Route>\n        <Route exact path='/' component={Signup} />\n        <Route exact path='/signup' component={Signup} />\n        <Route exact path='/login'>\n          <Login onLoginSuccess={setLogInDone} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n  // if (user && !user.username)\n  //   return <LoginMERN onLoginSuccess={setLogInDone} />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}